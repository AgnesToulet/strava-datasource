aliases:
  # Workflow filters
  - &filter-not-release-or-master
    tags:
      ignore: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
    branches:
      ignore:
        - master
        - /^release-[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
  - &filter-only-master
    branches:
      only: master
  - &filter-only-release
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/

defaults: &defaults
  working_directory: ~/grafana-strava-datasource
  docker:
    - image: circleci/node:12

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run: yarn build

  lint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run: yarn lint

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Test
          command: |
            yarn install --pure-lockfile --no-progress
            sudo npm install -g jest
            yarn test
      - store_artifacts:
          path: coverage

  make-release-branch:
    <<: *defaults
    environment:
      CI_GIT_USER: CircleCI
      CI_GIT_EMAIL: ci@grafana.com
    steps:
      - add_ssh_keys:
          fingerprints:
            - "58:4a:11:32:2d:98:26:f7:33:b5:4d:f0:6b:72:08:fc"
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: 'yarn install --pure-lockfile --no-progress'
          no_output_timeout: 15m
      - save_cache:
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
          - ./node_modules
      - run: ./.circleci/make-release.sh

  codespell:
    docker:
    - image: circleci/python

    steps:
    - checkout
    - run: sudo pip install codespell
    - run: codespell -S './.git*,./src/img*' -L que --ignore-words=./.codespell_ignore

workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters: *filter-only-master
      - codespell:
          filters: *filter-only-master
      - lint:
          filters: *filter-only-master
      - test:
          filters: *filter-only-master

  build-branches-and-prs:
    jobs:
      - build:
          filters: *filter-not-release-or-master
      - codespell:
          filters: *filter-not-release-or-master
      - lint:
          filters: *filter-not-release-or-master
      - test:
          filters: *filter-not-release-or-master

  build-release:
    jobs:
      - build:
          filters: *filter-only-release
      - codespell:
          filters: *filter-only-release
      - lint:
          filters: *filter-only-release
      - test:
          filters: *filter-only-release
      - make-release-branch:
          requires:
            - build
            - codespell
            - lint
            - test
          filters: *filter-only-release
